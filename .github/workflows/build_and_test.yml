name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: -C instrument-coverage
  LLVM_PROFILE_FILE: zvuk-%p-%m.profraw
  RUST_BACKTRACE: 1

jobs:
  format-check:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: cargo fmt
        run: cargo fmt --all -- --check

  clippy-build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, ubuntu-24.04, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy,llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - uses: Swatinem/rust-cache@v2

      - name: Run clippy
        run: |
          cargo clippy

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Collect coverage
        uses: coverallsapp/github-action@v2
        with:
          file: lcov.info
          flag-name: run-${{ join(matrix.*, '-') }}
          parallel: true

  finish:
    needs: clippy-build-and-test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        parallel-finished: true
        carryforward: "run-macos-14,run-ubuntu-24.04,run-windows-latest"
